name: 🚀 Deploy to Subgraph Studio

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version label for deployment'
        required: true
        default: 'v0.0.1'
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    environment: 
      name: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Install Dependencies
      run: npm ci

    - name: 🔧 Install Graph CLI
      run: npm install -g @graphprotocol/graph-cli

    - name: 🏗️ Generate Code
      run: npm run codegen

    - name: 🔨 Build Subgraph
      run: npm run build

    - name: ✅ Validate Build
      run: |
        echo "🔍 Validating build output..."
        
        if [ ! -d "build" ]; then
          echo "❌ Build directory not found"
          exit 1
        fi
        
        if [ ! -f "build/subgraph.yaml" ]; then
          echo "❌ Built subgraph.yaml not found"
          exit 1
        fi
        
        if [ ! -f "build/schema.graphql" ]; then
          echo "❌ Built schema.graphql not found"
          exit 1
        fi
        
        echo "✅ Build validation successful"

    - name: 🔐 Configure Graph Auth
      env:
        GRAPH_DEPLOY_KEY: ${{ secrets.GRAPH_DEPLOY_KEY }}
      run: |
        if [ -z "$GRAPH_DEPLOY_KEY" ]; then
          echo "❌ GRAPH_DEPLOY_KEY secret not configured"
          exit 1
        fi
        
        graph auth --studio $GRAPH_DEPLOY_KEY
        echo "✅ Graph authentication configured"

    - name: 📋 Deployment Info
      run: |
        VERSION="${{ github.event.inputs.version || github.ref_name }}"
        ENVIRONMENT="${{ github.event.inputs.environment || 'production' }}"
        
        echo "🚀 Deployment Information:"
        echo "📦 Version: $VERSION"
        echo "🌍 Environment: $ENVIRONMENT"
        echo "📅 Date: $(date)"
        echo "👤 Triggered by: ${{ github.actor }}"
        echo "🔗 Commit: ${{ github.sha }}"

    - name: 🚀 Deploy to Subgraph Studio
      env:
        VERSION: ${{ github.event.inputs.version || github.ref_name }}
      run: |
        echo "🚀 Deploying subgraph version $VERSION..."
        
        # Deploy with version label
        graph deploy \
          --studio idrt-transaction-analyzer \
          --version-label "$VERSION" \
          --deploy-key ${{ secrets.GRAPH_DEPLOY_KEY }}
        
        echo "✅ Deployment completed successfully!"

    - name: 📝 Create Deployment Summary
      run: |
        VERSION="${{ github.event.inputs.version || github.ref_name }}"
        ENVIRONMENT="${{ github.event.inputs.environment || 'production' }}"
        
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| 📦 Version | \`$VERSION\` |" >> $GITHUB_STEP_SUMMARY
        echo "| 🌍 Environment | \`$ENVIRONMENT\` |" >> $GITHUB_STEP_SUMMARY
        echo "| 📅 Deployed At | \`$(date)\` |" >> $GITHUB_STEP_SUMMARY
        echo "| 👤 Deployed By | \`${{ github.actor }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| 🔗 Commit | \`${{ github.sha }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
        echo "- 📊 [Subgraph Studio](https://thegraph.com/studio/subgraph/idrt-transaction-analyzer/)" >> $GITHUB_STEP_SUMMARY
        echo "- 📖 [Documentation](https://github.com/yeheskieltame/Rupiah-tracking/blob/main/README.md)" >> $GITHUB_STEP_SUMMARY
        echo "- 🔍 [Query Examples](https://github.com/yeheskieltame/Rupiah-tracking/blob/main/QUERIES.md)" >> $GITHUB_STEP_SUMMARY

  notify:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    
    steps:
    - name: 📢 Deployment Notification
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "✅ Deployment successful! 🎉"
          echo "📊 Subgraph is now available at: https://thegraph.com/studio/subgraph/idrt-transaction-analyzer/"
        else
          echo "❌ Deployment failed! 😞"
          echo "Please check the logs for more details."
        fi

    # Optional: Add Discord/Slack notification here
    # - name: 📱 Discord Notification
    #   if: needs.deploy.result == 'success'
    #   uses: discord-message/action@main
    #   with:
    #     webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
    #     content: |
    #       🚀 **IDRT Subgraph Deployed!**
    #       📦 Version: ${{ github.event.inputs.version || github.ref_name }}
    #       🔗 https://thegraph.com/studio/subgraph/idrt-transaction-analyzer/
